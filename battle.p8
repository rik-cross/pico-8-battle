pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
local btns = {
  l = 0,
  r = 1,
  u = 2,
  d = 3,
}
local world={}

local function entity(props)
  local ent   = {}
  local props = props or {}

  ent.pos      = props.pos
  ent.int      = props.int
  ent.sprite   = props.sprite
  ent.controls = props.controls
  ent.cam      = props.cam

  ent.has = function(key)
    return ent[key] ~= nil
  end

  return ent
end

local function camera(props)
  local obj   = {}
  local props = props or {}

  obj.bg = props.bg or 3
  obj.x  = props.x  or 0
  obj.y  = props.y  or 0
  obj.w  = props.w  or 8
  obj.h  = props.h  or 12

  return obj
end

local function controls(props)
  local obj   = {}
  local props = props or {}

  obj.l = props.l or btns.l 
  obj.r = props.r or btns.r
  obj.u = props.u or btns.u 
  obj.d = props.d or btns.d
  obj.p = props.p or 0 

  obj.update = function(e)
    e.int.l = btn(obj.l, obj.p)
    e.int.r = btn(obj.r, obj.p)
    e.int.u = btn(obj.u, obj.p)
    e.int.d = btn(obj.d, obj.p)
  end

  return obj
end

local function int()
  local obj = {}

  obj.l = false
  obj.r = false
  obj.u = false
  obj.d = false
  obj.s = false

  return obj
end

local function pos(props)
  local obj   = {}
  local props = props or {}

  obj.x = props.x or 10
  obj.y = props.y or 10
  
  obj.update = function(e)
    local x_new = obj.x
    local y_new = obj.y

    -- if entity wants to move up
    if (e.int.u) then
      y_new = obj.y - 1
      e.int.u = false
    end

    -- if entity wants to move down
    if (e.int.d) then
      y_new = obj.y + 1
      e.int.d = false
    end

    -- if entity wants to move up
    if (e.int.l) then
      x_new = obj.x - 1
      e.int.l = false
    end

    -- if entity wants to move up
    if (e.int.r) then
      x_new = obj.x + 1
      e.int.r = false
    end

    -- do a hittest here

    -- update position
    obj.x = x_new
    obj.y = y_new
  end

  return obj
end

function _init()
 -- p1 entity
 add(world, entity({
  pos      = pos(),
  int      = int(),
  sprite   = 1,
  controls = controls({ p = 0 }),
  cam      = camera(),
 }))
 
 -- p2 entity
 add(world, entity({
  pos      = pos({ y = 50 }),
  int      = int(),
  sprite   = 2,
  controls = controls({ p = 1 }),
  cam      = camera({ bg = 4 , x = 64 }),
 }))
end

function _update()
 for e in all(world) do
  -- control system
  if e.has('controls') and e.has('pos') then
   e.controls.update(e)   
  end

  -- physics system
  if e.has('pos') then
   e.pos.update(e)
  end
 end
end

function _draw()
 cls()
 rectfill(0, 0, 127, 127, 1)
 
 -- graphics system
 for z in all(world) do
  if z.has('cam') then
   rectfill(z.cam.x * 8, z.cam.y * 8, z.cam.w * 8, z.cam.h * 8, z.cam.bg)
  
   local map_x = z.cam.x + (z.cam.w*8)/2 - z.pos.x - 4
   local map_y = z.cam.y + (z.cam.h*8)/2 - z.pos.y - 4
  
   clip(z.cam.x,z.cam.y,z.cam.w*8,z.cam.h*8)
  
   map(0,0,map_x,map_y)
  
   for e in all(world) do
    if e["pos"] and e["sprite"] then
     -- if e["pos"]["x"] <  then 
      spr(e.sprite,e.pos.x + map_x,e.pos.y + map_y)
     -- end
    end
   end
 
   clip()
  end
 end
 
end
__gfx__
00000000001111000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111112222222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111192222222900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000111111192222222900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700111111112222222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011111100222222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001111000022220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
7777f77755555555ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6666f76656666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6666f76656666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffff56666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f777777756666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f766666656666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
f766666656666665ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ffffffff55555555ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1111111111111111111112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111112121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121212121212121212121212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
